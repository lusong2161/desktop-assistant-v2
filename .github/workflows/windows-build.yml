name: Windows Build

on:
  push:
    branches: [ main, 'devin/*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        
    - name: Setup VSBuild Tools
      uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: x64
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.5'
        channel: 'stable'
        
    - name: Install Dependencies
      shell: pwsh
      run: |
        Set-Location -Path "smart-assistant"
        flutter config --enable-windows-desktop
        flutter pub get
        
    - name: Setup vcpkg
      shell: pwsh
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
        .\vcpkg\vcpkg integrate install
        $env:VCPKG_ROOT = Join-Path $env:GITHUB_WORKSPACE "vcpkg"
        echo "VCPKG_ROOT=$env:VCPKG_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
        
    - name: Build Core Library
      shell: pwsh
      run: |
        $CorePath = Join-Path $env:GITHUB_WORKSPACE "SmartAssistant.Core"
        $BuildPath = Join-Path $CorePath "build"
        $VcpkgPath = Join-Path $env:GITHUB_WORKSPACE "vcpkg"
        $ToolchainPath = Join-Path $VcpkgPath "scripts\buildsystems\vcpkg.cmake"
        
        Write-Host "Core Path: $CorePath"
        Write-Host "Build Path: $BuildPath"
        Write-Host "Toolchain Path: $ToolchainPath"
        
        if (-not (Test-Path $CorePath)) {
            Write-Error "Core directory not found at: $CorePath"
            exit 1
        }
        
        Set-Location -Path $CorePath
        New-Item -ItemType Directory -Force -Path $BuildPath
        Set-Location -Path $BuildPath
        
        cmake -A x64 -DCMAKE_TOOLCHAIN_FILE="$ToolchainPath" ..
        if ($LASTEXITCODE -ne 0) {
            Write-Error "CMake configuration failed"
            exit 1
        }
        
        cmake --build . --config Release
        if ($LASTEXITCODE -ne 0) {
            Write-Error "CMake build failed"
            exit 1
        }
        
    - name: Build Flutter App
      shell: pwsh
      run: |
        Set-Location -Path "smart-assistant"
        flutter config --enable-windows-desktop
        flutter build windows --release
        
    - name: Run Tests
      shell: pwsh
      run: |
        Set-Location -Path "smart-assistant"
        flutter test
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: smart-assistant/build/windows/runner/Release/
